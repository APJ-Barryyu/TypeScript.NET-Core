{"version":3,"sources":["System/Uri/Uri.ts"],"names":[],"mappings":"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","file":"Uri.js","sourcesContent":["///<reference types=\"node\"/>\r\nimport * as assert from \"assert\";\r\nimport \"mocha\";\r\nimport Uri from \"../../../../dist/commonjs/System/Uri/Uri\";\r\nimport {Scheme} from \"../../../../dist/commonjs/System/Uri/Scheme\";\r\nimport Functions from \"../../../../dist/commonjs/System/Functions\";\r\n\r\n\r\nconst pathAfterRoot = 'one/two/three.html';\r\nconst path = '/' + pathAfterRoot;\r\nconst params = [['four', 'five'], ['six', 'seven']];\r\nconst query = '?' + params[0].join('=') + '&' + params[1].join('=');\r\n\r\n\r\nconst u = Uri.from(path + query);\r\n\r\ndescribe('.scheme', ()=>\r\n{\r\n\tit('should equal', ()=>\r\n\t{\r\n\t\tassert.equal((new Uri(null, '', '', null, '')).scheme, null);\r\n\t\tassert.equal((new Uri(\"http\", '', '', null, '')).scheme, \"http\");\r\n\t\tassert.equal((new Uri(Scheme.HTTP, '', '', null, '')).scheme, \"http\");\r\n\t});\r\n\r\n\tit('should throw', ()=>\r\n\t{\r\n\t\tassert.throws(()=> {new Uri(<any>64, '', '', null, '', <any>null);});\r\n\t});\r\n});\r\n\r\ndescribe('.port', ()=>\r\n{\r\n\tit('should equal', ()=>\r\n\t{\r\n\t\tconst d = 'x.com', port = 80;\r\n\t\tassert.equal((new Uri(null, '', d, 0, '')).port, 0);\r\n\t\tassert.equal((new Uri(null, '', d, null, '')).port, null);\r\n\t\tassert.equal((new Uri(null, '', d, <any>'', '')).port, null);\r\n\t\tassert.equal((new Uri(null, '', d, NaN, '')).port, null);\r\n\t\tassert.equal((new Uri(null, '', d, port, '')).port, port);\r\n\t\tassert.equal((new Uri(null, '', d, <any>(port + ''), '')).port, port);\r\n\t});\r\n\tit('should throw', ()=>\r\n\t{\r\n\t\tassert.throws(()=> {new Uri(null, '', '', <any>'foo', '');});\r\n\t\tassert.throws(()=> {new Uri(null, '', '', <any>{}, '');});\r\n\t\tassert.throws(()=> {new Uri(null, '', '', -1, '');});\r\n\t\tassert.throws(()=> {new Uri(null, '', '', Infinity, '');});\r\n\t});\r\n\r\n});\r\n\r\ndescribe('.path', ()=>\r\n{\r\n\tit('should equal ' + path, ()=>\r\n\t{\r\n\t\tassert.equal(u.path, path);\r\n\t\tassert.equal((new Uri(null, null, null, null, pathAfterRoot)).path, pathAfterRoot);\r\n\t\tassert.equal(Uri.toString({\r\n\t\t\tpath: pathAfterRoot,\r\n\t\t\tfragment: '#x'\r\n\t\t}), pathAfterRoot + \"#x\");\r\n\t});\r\n\r\n\tit('should allow null', ()=>\r\n\t{\r\n\t\tassert.equal((new Uri(null, '', '', null, '')).path, null);\r\n\t\tassert.equal((new Uri(Scheme.HTTP, '', '', null, '')).path, null);\r\n\t\tassert.equal((new Uri('http', '', '', null, '')).path, null);\r\n\t});\r\n});\r\n\r\ndescribe('.fragment', ()=>\r\n{\r\n\tit('should equal', ()=>\r\n\t{\r\n\t\tassert.equal(u.path, path);\r\n\t});\r\n\r\n\tit('should allow null', ()=>\r\n\t{\r\n\t\tassert.equal((new Uri(null, '', '', null, '')).path, null);\r\n\t\tassert.equal((new Uri(Scheme.HTTP, '', '', null, '')).path, null);\r\n\t\tassert.equal((new Uri('http', '', '', null, '')).path, null);\r\n\t});\r\n});\r\n\r\ndescribe('.from(uri)', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tconst c1 = Uri.from(u);\r\n\t\tassert.ok(u.equals(c1));\r\n\r\n\t\tconst c2 = Uri.from({}, u);\r\n\t\tassert.ok(u.equals(c2));\r\n\r\n\t});\r\n});\r\n\r\ndescribe('.updateQuery(query)', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tconst c = u.updateQuery(\"x=y\");\r\n\t\tassert.equal(c.queryParams[\"x\"], \"y\");\r\n\t});\r\n});\r\n\r\ndescribe('.pathSegments', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tassert.equal(u.pathSegments.join(''), u.path);\r\n\t});\r\n});\r\n\r\ndescribe('.getAuthority(uri)', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tassert.equal(Uri.getAuthority({\r\n\t\t\thost: 'a',\r\n\t\t\tport: 80,\r\n\t\t\tuserInfo: 'b',\r\n\t\t\tpath: 'xxx'\r\n\t\t}), \"//b@a:80\");\r\n\t\tassert.equal(Uri.getAuthority({host: 'a', port: 80, path: 'xxx'}), \"//a:80\");\r\n\t\tassert.equal(Uri.getAuthority({host: 'a', userInfo: 'b', path: 'xxx'}), \"//b@a\");\r\n\t\tassert.equal(Uri.getAuthority({host: 'a'}), \"//a\");\r\n\t});\r\n\r\n\tit('should throw', ()=>\r\n\t{\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tUri.getAuthority({userInfo: 'b'});\r\n\t\t});\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tUri.getAuthority({port: 80});\r\n\t\t});\r\n\t});\r\n\r\n});\r\n\r\ndescribe('.copyOf(), .copyTo() & .equals()', ()=>\r\n{\r\n\tit('should equal the copy', ()=>\r\n\t{\r\n\t\tassert.ok(u.equals(Uri.copyOf(u)));\r\n\t\tassert.ok(u.equals(u.copyTo({})));\r\n\t});\r\n});\r\n\r\ndescribe('.parse(url)', ()=>\r\n{\r\n\tit('should throw', ()=>\r\n\t{\r\n\t\tassert.throws(()=>Uri.parse(<any>null, true));\r\n\t});\r\n});\r\n\r\ndescribe('.toString(uri)', ()=>\r\n{\r\n\tit('should throw', ()=>\r\n\t{\r\n\t\tassert.throws(()=>Uri.toString({\r\n\t\t\tscheme: \"http\", // Can't target a scheme when no authority is provided.\r\n\t\t\tpath: pathAfterRoot,\r\n\t\t\tfragment: '#x'\r\n\t\t}));\r\n\t});\r\n\r\n\tit('should equal', ()=>\r\n\t{\r\n\t\tassert.equal(Uri.toString({\r\n\t\t\tscheme: \"http\",\r\n\t\t\thost: \"x.com\",\r\n\t\t\tpath: pathAfterRoot,\r\n\t\t\tfragment: '#x',\r\n\t\t}), \"http://x.com\" + path + \"#x\");\r\n\t});\r\n});\r\n\r\ndescribe('.tryParse(uri)', ()=>\r\n{\r\n\tit('should return false if invalid', ()=>\r\n\t{\r\n\t\tassert.ok(!Uri.tryParse(<any>null, Functions.Blank));\r\n\t});\r\n\r\n\tit('should parse correctly', ()=>\r\n\t{\r\n\t\tconst fragment = \"x##?y\", full = \"http://x.com/y/z#\" + fragment;\r\n\t\tassert.ok(Uri.tryParse(full, out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.fragment, fragment);\r\n\t\t\tassert.equal(Uri.toString(out), full);\r\n\t\t}));\r\n\r\n\t\tassert.ok(Uri.tryParse(\"http://x.com/y/z?#\", out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.query, undefined);\r\n\t\t\tassert.equal(out.fragment, undefined);\r\n\t\t}));\r\n\r\n\t\tassert.ok(!Uri.tryParse(\"hello//x.com/y/z#\" + fragment, Functions.Blank));\r\n\t\tassert.ok(!Uri.tryParse(\"hello://x.com/y/z#\" + fragment, Functions.Blank));\r\n\t\tassert.ok(Uri.tryParse(\" ://x.com/y/z#\" + fragment, Functions.Blank));\r\n\t\tassert.ok(Uri.tryParse(\"x.com\", out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.path, undefined);\r\n\t\t}));\r\n\t\tassert.ok(Uri.tryParse(\"x.com/\", out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.path, '/');\r\n\t\t}));\r\n\t\tassert.ok(Uri.tryParse(\"me@x.com/\" + fragment, out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.userInfo, 'me');\r\n\t\t}));\r\n\t\tassert.ok(Uri.tryParse(\"@x.com/\" + fragment, out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.userInfo, undefined);\r\n\t\t}));\r\n\r\n\t\tassert.ok(Uri.tryParse(\"@x.com:80\" + fragment, out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.port, 80);\r\n\t\t}));\r\n\t\tassert.ok(!Uri.tryParse(\"@x.com:\" + fragment, Functions.Blank));\r\n\r\n\t\tassert.ok(!Uri.tryParse(\"\", out=>\r\n\t\t{\r\n\t\t\tassert.equal(out.scheme, undefined);\r\n\t\t\tassert.equal(out.host, undefined);\r\n\t\t\tassert.equal(out.userInfo, undefined);\r\n\t\t\tassert.equal(out.port, undefined);\r\n\t\t\tassert.equal(out.path, undefined);\r\n\t\t\tassert.equal(out.query, undefined);\r\n\t\t\tassert.equal(out.fragment, undefined);\r\n\t\t}));\r\n\t});\r\n\r\n});\r\n\r\ndescribe('.baseUri', ()=>\r\n{\r\n\tit('should equal ' + path, ()=>\r\n\t{\r\n\t\tassert.equal(u.baseUri, path);\r\n\t});\r\n});\r\n\r\ndescribe('.query', ()=>\r\n{\r\n\tit('should equal ' + query, ()=>\r\n\t{\r\n\t\tassert.equal(u.query, query);\r\n\t});\r\n});\r\n\r\n\r\ndescribe('.queryParams', ()=>\r\n{\r\n\tit('should equal contain correct values', ()=>\r\n\t{\r\n\t\tassert.equal(u.queryParams[params[0][0]], params[0][1]);\r\n\t\tassert.equal(u.queryParams[params[1][0]], params[1][1]);\r\n\t});\r\n\r\n\r\n});\r\n\r\n\r\ndescribe('KVP versus Tuple', ()=>\r\n{\r\n\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tconst uTuples = new Uri(u.scheme, u.userInfo, u.host, u.port, u.path, <any>params);\r\n\t\tconst uKvp = new Uri(u.scheme, u.userInfo, u.host, u.port, u.path, u.queryParams);\r\n\r\n\t\tassert.equal(uTuples.toString(), uKvp.toString());\r\n\t});\r\n\r\n\r\n});\r\n\r\n// Disabled for code coverage report\r\n// describe('es6 > babel > commonjs', ()=>\r\n// {\r\n// \tconst Uri2 = require('../../../../dist/commonjs/System/Uri/Uri').default;\r\n//\r\n// \tvar u2 = Uri2.from(path + query);\r\n//\r\n// \tdescribe('.path', ()=>\r\n// \t{\r\n// \t\tit('should equal ' + path, ()=>\r\n// \t\t{\r\n// \t\t\tassert.equal(u2.path, path);\r\n// \t\t});\r\n// \t});\r\n//\r\n// \tdescribe('.query', ()=>\r\n// \t{\r\n// \t\tit('should equal ' + query, ()=>\r\n// \t\t{\r\n// \t\t\tassert.equal(u2.query, query);\r\n// \t\t});\r\n// \t});\r\n// });\r\n"]}