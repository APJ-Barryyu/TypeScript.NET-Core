{"version":3,"sources":["System/Collections/Enumeration/IndexEnumerator.ts"],"names":[],"mappings":"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","file":"IndexEnumerator.js","sourcesContent":["///<reference types=\"node\"/>\r\nimport * as assert from \"assert\";\r\nimport \"mocha\";\r\nimport IndexEnumerator from \"../../../../../dist/commonjs/System/Collections/Enumeration/IndexEnumerator\";\r\n\r\nconst a:{ [index:number]:number } = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4};\r\n\r\ndescribe(\"new & .moveNext()\", ()=>\r\n{\r\n\tit(\"should ignore null sources\", ()=>\r\n\t{\r\n\r\n\t\tassert.doesNotThrow(()=>\r\n\t\t{\r\n\t\t\tconst i = new IndexEnumerator(() =>\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: <any>null,\r\n\t\t\t\t\tpointer: 1,\r\n\t\t\t\t\tlength: 3,\r\n\t\t\t\t\tstep: 0\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ti.moveNext();\r\n\t\t});\r\n\r\n\t\tassert.doesNotThrow(()=>\r\n\t\t{\r\n\t\t\tconst i = new IndexEnumerator(() =>\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: <any>null,\r\n\t\t\t\t\tlength: 3,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ti.dispose();\r\n\t\t});\r\n\r\n\t});\r\n\r\n\r\n\tit(\"should throw for invalid step\", ()=>\r\n\t{\r\n\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tconst i = new IndexEnumerator(() =>\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: a,\r\n\t\t\t\t\tpointer: 1,\r\n\t\t\t\t\tlength: 3,\r\n\t\t\t\t\tstep: 0\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ti.moveNext();\r\n\t\t});\r\n\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tconst i = new IndexEnumerator(() =>\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: a,\r\n\t\t\t\t\tpointer: 1,\r\n\t\t\t\t\tlength: 3,\r\n\t\t\t\t\tstep: 1.2\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ti.moveNext();\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should throw for invalid pointer\", ()=>\r\n\t{\r\n\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tconst i = new IndexEnumerator(() =>\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: a,\r\n\t\t\t\t\tpointer: 1.3,\r\n\t\t\t\t\tlength: 3,\r\n\t\t\t\t\tstep: 1\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ti.moveNext();\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tit(\"should throw for invalid length\", ()=>\r\n\t{\r\n\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tconst i = new IndexEnumerator(() =>\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: a,\r\n\t\t\t\t\tpointer: 1,\r\n\t\t\t\t\tlength: -1,\r\n\t\t\t\t\tstep: 1\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ti.moveNext();\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tit(\"should enumerate by 1 with no step\", ()=>\r\n\t{\r\n\r\n\r\n\t\tconst a = [0, 1, 2, 3, 4];\r\n\t\tconst len = a.length;\r\n\t\tlet count = 0;\r\n\t\tconst test = new IndexEnumerator(() =>\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tsource: [0, 1, 2, 3, 4],\r\n\t\t\t\tlength: 5,\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet last:number = <any>null;\r\n\t\twhile(test.moveNext())\r\n\t\t{\r\n\t\t\tcount++;\r\n\t\t\tlast = test.current!;\r\n\t\t}\r\n\t\tassert.equal(count, len);\r\n\t\tassert.equal(last, 4);\r\n\t\ttest.dispose();\r\n\t});\r\n});"]}