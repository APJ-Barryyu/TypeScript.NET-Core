{"version":3,"sources":["System/TypeValidator.ts"],"names":[],"mappings":"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","file":"TypeValidator.js","sourcesContent":["///<reference types=\"node\"/>\r\nimport * as assert from \"assert\";\r\nimport \"mocha\";\r\nimport {TypeInfoHelper, TypeValidator} from \"../../../dist/commonjs/System/TypeValidator\";\r\n\r\n\r\nconst example = new TypeInfoHelper({\r\n\ta: {},\r\n\tb: \"hello\",\r\n\tc: 1,\r\n\td: true,\r\n\te: {\r\n\t\tf: \"whatever\",\r\n\t\tg: false,\r\n\t\th: [\r\n\t\t\t0,\r\n\t\t\t1,\r\n\t\t\t\"2\"\r\n\t\t]\r\n\t},\r\n\ti: \"noise\"\r\n});\r\n\r\ndescribe('.contains(descriptor)', ()=>\r\n{\r\n\tit('should detect a positive match', ()=>\r\n\t{\r\n\t\tassert.ok(example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: Array\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tassert.ok(example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: [\r\n\t\t\t\t\tNumber,\r\n\t\t\t\t\tNumber,\r\n\t\t\t\t\tString\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tassert.ok(example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: [\r\n\t\t\t\t\tNumber,\r\n\t\t\t\t\tNumber,\r\n\t\t\t\t\tString\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\ti: \"noise\"\r\n\t\t}));\r\n\r\n\t\tassert.ok(example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: [\r\n\t\t\t\t\tNumber\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}))\r\n\t});\r\n\r\n\tit('should detect a negative match', ()=>\r\n\t{\r\n\t\tassert.ok(!example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: [\r\n\t\t\t\t\tNumber,\r\n\t\t\t\t\tBoolean,\r\n\t\t\t\t\tString\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tassert.ok(!example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: [\r\n\t\t\t\t\tString\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\r\n\t\tassert.ok(!example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: [\r\n\t\t\t\t\tNumber\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\ti: \"goo\"\r\n\t\t}));\r\n\r\n\t\tassert.ok(!example.contains({\r\n\t\t\ta: Object,\r\n\t\t\tb: String,\r\n\t\t\tc: Number,\r\n\t\t\td: Boolean,\r\n\t\t\te: {\r\n\t\t\t\tf: String,\r\n\t\t\t\tg: Boolean,\r\n\t\t\t\th: [\r\n\t\t\t\t\tNumber\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\ti: Boolean\r\n\t\t}));\r\n\t});\r\n});\r\n\r\ndescribe(\"Example\", ()=>\r\n\tit(\"should work\", ()=>\r\n\t{\r\n\r\n\t\t// Step 1: Declare the expected type/interface.\r\n\t\tinterface MyType\r\n\t\t{\r\n\t\t\ta:Object,\r\n\t\t\tb:String,\r\n\t\t\tc:Number,\r\n\t\t\td:Boolean,\r\n\t\t\te:{\r\n\t\t\t\tf:String,\r\n\t\t\t\tg:Boolean,\r\n\t\t\t\th:[\r\n\t\t\t\t\tNumber,\r\n\t\t\t\t\tBoolean,\r\n\t\t\t\t\tString\r\n\t\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Step 2: Copy the interface as an actual object and <type> the validator\r\n\t\tconst MyTypeValidator\r\n\t\t\t      = new TypeValidator<MyType>(\r\n\t\t\t{\r\n\t\t\t\ta: Object,\r\n\t\t\t\tb: String,\r\n\t\t\t\tc: Number,\r\n\t\t\t\td: Boolean,\r\n\t\t\t\te: {\r\n\t\t\t\t\tf: String,\r\n\t\t\t\t\tg: Boolean,\r\n\t\t\t\t\th: [\r\n\t\t\t\t\t\tNumber,\r\n\t\t\t\t\t\tBoolean,\r\n\t\t\t\t\t\tString\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Step 3: validate as many times as you want:\r\n\t\tconst myItem = {\r\n\t\t\ta: {},\r\n\t\t\tb: \"hello\",\r\n\t\t\tc: 1,\r\n\t\t\td: true,\r\n\t\t\te: {\r\n\t\t\t\tf: \"whatever\",\r\n\t\t\t\tg: false,\r\n\t\t\t\th: [\r\n\t\t\t\t\t0,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\t\"2\"\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\ti: \"noise\"\r\n\t\t};\r\n\r\n\t\t// no compile-time type errors!\r\n\t\tif(MyTypeValidator.isSubsetOf(myItem))\r\n\t\t{\r\n\t\t\tassert.equal(myItem.e.h.length, 3);\r\n\t\t\tassert.equal(myItem.b, \"hello\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tassert.ok(false, \"Should have validated ok.\");\r\n\t\t}\r\n\r\n\t\tassert.ok(!MyTypeValidator.isSubsetOf(true));\r\n\t\tassert.ok(!MyTypeValidator.isSubsetOf(\"no\"));\r\n\t\tassert.ok(!MyTypeValidator.isSubsetOf({\r\n\t\t\ta: {},\r\n\t\t\tb: \"hello\"\r\n\t\t}));\r\n\r\n\t})\r\n);\r\n\r\ndescribe(\"Complex test\", ()=>\r\n\tit(\"should work\", ()=>\r\n\t{\r\n\t\tinterface ISystem\r\n\t\t{\r\n\t\t\tvolume_str:String,\r\n\t\t\tbuy:Boolean,\r\n\t\t\tissued:String,\r\n\t\t\tprice:Number,\r\n\t\t\tvolumeEntered:Number,\r\n\t\t\tminVolume:Number,\r\n\t\t\tvolume:Number,\r\n\t\t\trange:String,\r\n\t\t\thref:String,\r\n\t\t\tduration_str:String,\r\n\t\t\tlocation:{\r\n\t\t\t\tid_str:String,\r\n\t\t\t\thref:String,\r\n\t\t\t\tid:Number,\r\n\t\t\t\tname:String,\r\n\t\t\t},\r\n\t\t\tduration:Number,\r\n\t\t\tminVolume_str:String,\r\n\t\t\tvolumeEntered_str:String,\r\n\t\t\ttype:{\r\n\t\t\t\tid_str:String,\r\n\t\t\t\thref:String,\r\n\t\t\t\tid:Number,\r\n\t\t\t\tname:String,\r\n\t\t\t},\r\n\t\t\tid:Number,\r\n\t\t\tid_str:String,\r\n\t\t}\r\n\r\n\t\tconst ISystemTypeValidator\r\n\t\t\t      = new TypeValidator<ISystem>({\r\n\t\t\tvolume_str: String,\r\n\t\t\tbuy: Boolean,\r\n\t\t\tissued: String,\r\n\t\t\tprice: Number,\r\n\t\t\tvolumeEntered: Number,\r\n\t\t\tminVolume: Number,\r\n\t\t\tvolume: Number,\r\n\t\t\trange: String,\r\n\t\t\thref: String,\r\n\t\t\tduration_str: String,\r\n\t\t\tlocation: {\r\n\t\t\t\tid_str: String,\r\n\t\t\t\thref: String,\r\n\t\t\t\tid: Number,\r\n\t\t\t\tname: String,\r\n\t\t\t},\r\n\t\t\tduration: Number,\r\n\t\t\tminVolume_str: String,\r\n\t\t\tvolumeEntered_str: String,\r\n\t\t\ttype: {\r\n\t\t\t\tid_str: String,\r\n\t\t\t\thref: String,\r\n\t\t\t\tid: Number,\r\n\t\t\t\tname: String,\r\n\t\t\t},\r\n\t\t\tid: Number,\r\n\t\t\tid_str: String,\r\n\t\t});\r\n\r\n\t\t//noinspection SpellCheckingInspection\r\n\t\tassert.ok(ISystemTypeValidator.isSubsetOf(\r\n\t\t\t{\r\n\t\t\t\t\"volume_str\": \"590653\",\r\n\t\t\t\t\"buy\": false,\r\n\t\t\t\t\"issued\": \"2016-04-03T06:18:39\",\r\n\t\t\t\t\"price\": 4.96,\r\n\t\t\t\t\"volumeEntered\": 1090653,\r\n\t\t\t\t\"minVolume\": 1,\r\n\t\t\t\t\"volume\": 590653,\r\n\t\t\t\t\"range\": \"region\",\r\n\t\t\t\t\"href\": \"https://crest-tq.eveonline.com/market/10000007/orders/4490918296/\",\r\n\t\t\t\t\"duration_str\": \"90\",\r\n\t\t\t\t\"location\": {\r\n\t\t\t\t\t\"id_str\": \"61000748\",\r\n\t\t\t\t\t\"href\": \"https://crest-tq.eveonline.com/universe/locations/61000748/\",\r\n\t\t\t\t\t\"id\": 61000748,\r\n\t\t\t\t\t\"name\": \"I6-SYN I - MegaAdmiral respect obelisk\"\r\n\t\t\t\t},\r\n\t\t\t\t\"duration\": 90,\r\n\t\t\t\t\"minVolume_str\": \"1\",\r\n\t\t\t\t\"volumeEntered_str\": \"1090653\",\r\n\t\t\t\t\"type\": {\r\n\t\t\t\t\t\"id_str\": \"34\",\r\n\t\t\t\t\t\"href\": \"https://crest-tq.eveonline.com/types/34/\",\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"name\": \"Tritanium\"\r\n\t\t\t\t},\r\n\t\t\t\t\"id\": 4490918296,\r\n\t\t\t\t\"id_str\": \"4490918296\"\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t}));\r\n"]}