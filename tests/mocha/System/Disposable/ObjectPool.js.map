{"version":3,"sources":["System/Disposable/ObjectPool.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgDE","file":"ObjectPool.js","sourcesContent":["/*\r\nimport ObjectPool from \"../../../../dist/commonjs/System/Disposable/ObjectPool\";\r\nimport Stopwatch from \"../../../../dist/commonjs/System/Diagnostics/Stopwatch\";\r\n\r\nconst pool = new ObjectPool(40, ()=>new Array<any>(100));\r\n\r\nfunction fake(o:any) {}\r\nconst TRIES:number = 1000;\r\ndescribe(\"should be performant\", ()=>\r\n{\r\n\tvar n1:number, n2:number;\r\n\tit((n1=Stopwatch.measure(()=>\r\n\t\t{\r\n\t\t\tvar a:any[], b:any[];\r\n\t\t\tfor(let i = 0; i<TRIES; i++)\r\n\t\t\t{\r\n\t\t\t\ta = new Array<any>(100);\r\n\t\t\t\tb = new Array<any>(100);\r\n\t\t\t\tfake(a);\r\n\t\t\t\tfake(b);\r\n\t\t\t}\r\n\r\n\t\t}).milliseconds) + \" milliseconds using new only\", ()=>\r\n\t{\r\n\t\tassert.ok(true);\r\n\t});\r\n\r\n\tit((n2=Stopwatch.measure(()=>\r\n\t\t{\r\n\t\t\tvar a:any[], b:any[];\r\n\t\t\tfor(let i = 0; i<TRIES; i++)\r\n\t\t\t{\r\n\t\t\t\ta = pool.take();\r\n\t\t\t\tb = pool.take();\r\n\t\t\t\tfake(a);\r\n\t\t\t\tfake(b);\r\n\t\t\t\tpool.add(a);\r\n\t\t\t\tpool.add(b);\r\n\t\t\t}\r\n\t\t}).milliseconds) + \" milliseconds using ObjectPool\", ()=>\r\n\t{\r\n\t\tassert.ok(true);\r\n\t});\r\n\r\n\t// if(n1<n2)\r\n\t// \tconsole.warn(\"ObjectPool is not outperforming 'new'.\")\r\n\r\n});\r\n*/\r\n\r\n\r\n"]}