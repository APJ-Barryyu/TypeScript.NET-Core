{"version":3,"sources":["System/Collections/Sorting/KeySortedContext.ts"],"names":["KeySortedContext","KeySortedContext.constructor","KeySortedContext.compare"],"mappings":";;;;;;;;;;;;;;;;;;;;;;uBAUwB,eAAe;;IAA3B,MAAM;;4BACM,eAAe;;;;yBACjB,iBAAiB;;;;IAIvC,gBAAA;cAAA,gBAAA;;AAGCA,aAHD,gBAAA,CAIEA,IAAiBA,EACPA,YAA6BA,EAEAA;YADvCA,KAAKA,yDAASA,CAAeA;YAC7BA,QAAQA,yDAAiBA,MAAMA,CAACA,OAAOA;;8BAPzC,gBAAA;;AASEC,mCATF,gBAAA,6CASQA,IAAIA,EAAEA,QAAQA,EAAEA,KAAKA,EAAEA;AAJnBA,YAAAA,CAAAA,YAAYA,GAAZA,YAAYA,CAAiBA;KAKvCA;;iBAVF,gBAAA;;eAYQD,iBAACA,CAAGA,EAAEA,CAAGA,EAAAA;AAEfE,gBAAIA,CAACA,GAAGA,IAAIA;gBAAEA,EAAEA,GAAGA,CAACA,CAACA,YAAYA,CAACA;AAClCA,gBAAGA,CAACA,EAAEA,IAAIA,EAAEA,IAAEA,uBAAUA,QAAQA,EAAEA,kCAfpC,gBAAA,yCAeyDA,CAACA,EAAEA,CAACA,EAAEA;AAE7DA,gBAAIA,CAACA,GAAGA,MAAMA,CAACA,OAAOA,CAAMA,EAAEA,CAACA,CAACA,CAACA,EAAOA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;AAC/CA,gBAAGA,CAACA,IAAEA,CAACA,IAAIA,CAACA,CAACA,KAAKA,EAAEA,OAAOA,CAACA,CAACA,KAAKA,CAACA,OAAOA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;AACjDA,mBAAOA,CAACA,CAACA,MAAMA,GAACA,CAACA,CAACA;SAClBA;;;WApBF,gBAAA;;;qBAAA,gBAAA","file":"System/Collections/Sorting/KeySortedContext.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../../FunctionTypes.d.ts\"/>\r\n///<reference path=\"../../IComparer.d.ts\"/>\r\n///<reference path=\"../../Primitive.d.ts\"/>\r\n///<reference path=\"../Array/IArray.d.ts\"/>\r\n///<reference path=\"Order.d.ts\"/>\r\nimport * as Values from '../../Compare'\r\nimport SortContext from \"./SortContext\";\r\nimport Functions from \"../../Functions\";\r\n\r\ntype Comparable = Primitive|IComparable<any>\r\n\r\nexport default\r\nclass KeySortedContext<T, TKey extends Comparable> extends SortContext<T>\r\n{\r\n\tconstructor(\r\n\t\tnext:IComparer<T>,\r\n\t\tprotected _keySelector:Selector<T,TKey>,\r\n\t\torder:Order = Order.Ascending,\r\n\t\tcomparer:Comparison<T> = Values.compare)\r\n\t{\r\n\t\tsuper(next, comparer, order);\r\n\t}\r\n\r\n\tcompare(a:T, b:T):number\r\n\t{\r\n\t\tvar _ = this, ks = _._keySelector;\r\n\t\tif(!ks || ks==Functions.Identity) return super.compare(a, b);\r\n\t\t// We force <any> here since it can be a Primitive or IComparable<any>\r\n\t\tvar d = Values.compare(<any>ks(a), <any>ks(b));\r\n\t\tif(d==0 && _._next) return _._next.compare(a, b);\r\n\t\treturn _._order*d;\r\n\t}\r\n}\r\n"]}