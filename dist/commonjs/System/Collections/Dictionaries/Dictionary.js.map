{"version":3,"sources":["System/Collections/Dictionaries/Dictionary.ts"],"names":["HashEntry","HashEntry.constructor","EntryList","EntryList.constructor","EntryList.addLast","EntryList.replace","EntryList.remove","EntryList.clear","EntryList.forEach","callHasOwnProperty","computeHashCode","Dictionary","Dictionary.constructor","Dictionary.setKV","Dictionary.addByKeyValue","Dictionary.getValue","Dictionary.setValue","Dictionary.containsKey","Dictionary.clear","Dictionary.getCount","Dictionary.getEnumerator","Dictionary.getKeys","Dictionary.getValues"],"mappings":"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","file":"System/Collections/Dictionaries/Dictionary.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Original: http://linqjs.codeplex.com/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../../FunctionTypes.d.ts\"/>\r\nimport {areEqual} from '../../Compare';\r\nimport Type from '../../Types';\r\nimport Functions from '../../Functions';\r\nimport DictionaryAbstractBase from './DictionaryBase';\r\nimport EnumeratorBase from '../Enumeration/EnumeratorBase';\r\n\r\nconst VOID0:any = void 0;\r\n\r\n// LinkedList for Dictionary\r\nclass HashEntry<TKey, TValue>\r\n{\r\n\tconstructor(\r\n\t\tpublic key?:TKey,\r\n\t\tpublic value?:TValue,\r\n\t\tpublic prev?:HashEntry<TKey, TValue>,\r\n\t\tpublic next?:HashEntry<TKey, TValue>)\r\n\t{ }\r\n}\r\n\r\nclass EntryList<TKey, TValue>\r\n{\r\n\tconstructor(\r\n\t\tpublic first?:HashEntry<TKey, TValue>,\r\n\t\tpublic last?:HashEntry<TKey, TValue>)\r\n\t{ }\r\n\r\n\taddLast(entry:HashEntry<TKey, TValue>):void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(_.last!=null)\r\n\t\t{\r\n\t\t\t_.last.next = entry;\r\n\t\t\tentry.prev = _.last;\r\n\t\t\t_.last = entry;\r\n\t\t}\r\n\t\telse\r\n\t\t\t_.first = _.last = entry;\r\n\t}\r\n\r\n\treplace(entry:HashEntry<TKey, TValue>, newEntry:HashEntry<TKey, TValue>):void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(entry.prev!=null)\r\n\t\t{\r\n\t\t\tentry.prev.next = newEntry;\r\n\t\t\tnewEntry.prev = entry.prev;\r\n\t\t}\r\n\t\telse _.first = newEntry;\r\n\r\n\t\tif(entry.next!=null)\r\n\t\t{\r\n\t\t\tentry.next.prev = newEntry;\r\n\t\t\tnewEntry.next = entry.next;\r\n\t\t}\r\n\t\telse _.last = newEntry;\r\n\r\n\t}\r\n\r\n\tremove(entry:HashEntry<TKey, TValue>):void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(entry.prev!=null) entry.prev.next = entry.next;\r\n\t\telse _.first = entry.next;\r\n\r\n\t\tif(entry.next!=null) entry.next.prev = entry.prev;\r\n\t\telse _.last = entry.prev;\r\n\t}\r\n\r\n\tclear():void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\twhile(_.last)\r\n\t\t{\r\n\t\t\t_.remove(_.last);\r\n\t\t}\r\n\t}\r\n\r\n\tforEach(closure:(entry:HashEntry<TKey, TValue>) => void):void\r\n\t{\r\n\t\tvar _ = this, currentEntry:HashEntry<TKey, TValue> = _.first;\r\n\t\twhile(currentEntry)\r\n\t\t{\r\n\t\t\tclosure(currentEntry);\r\n\t\t\tcurrentEntry = currentEntry.next;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// static utility methods\r\nfunction callHasOwnProperty(target:any, key:string)\r\n{\r\n\treturn Object.prototype.hasOwnProperty.call(target, key);\r\n}\r\n\r\nfunction computeHashCode(obj:any):string\r\n{\r\n\tif(obj===null) return \"null\";\r\n\tif(obj===VOID0) return \"undefined\";\r\n\r\n\treturn (typeof obj.toString===Type.FUNCTION)\r\n\t\t? obj.toString()\r\n\t\t: Object.prototype.toString.call(obj);\r\n}\r\n\r\n\r\nexport default\r\nclass Dictionary<TKey, TValue> extends DictionaryAbstractBase<TKey, TValue>\r\n{\r\n\tprivate _count:number = 0;\r\n\tprivate _entries = new EntryList<TKey, TValue>();\r\n\tprivate _buckets:IMap<HashEntry<TKey, TValue>[]> = {};\r\n\r\n\tconstructor(private compareSelector:Selector<TKey,any> = Functions.Identity)\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\tprivate setKV(key:TKey, value:TValue, allowOverwrite:boolean):boolean\r\n\t{\r\n\t\tvar _ = this, buckets = _._buckets, entries = _._entries, comparer = _.compareSelector;\r\n\t\tvar compareKey = comparer(key);\r\n\t\tvar hash = computeHashCode(compareKey), entry:HashEntry<TKey, TValue>;\r\n\r\n\t\tif(callHasOwnProperty(buckets, hash))\r\n\t\t{\r\n\t\t\tvar equal:(a:any, b:any, strict?:boolean) => boolean = areEqual;\r\n\t\t\tvar array = buckets[hash];\r\n\t\t\tfor(let i = 0; i<array.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar old = array[i];\r\n\t\t\t\tif(comparer(old.key)===compareKey)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!allowOverwrite)\r\n\t\t\t\t\t\tthrow new Error(\"Key already exists.\");\r\n\r\n\t\t\t\t\tvar changed = !equal(old.value, value);\r\n\t\t\t\t\tif(changed)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(value===VOID0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tentries.remove(old);\r\n\t\t\t\t\t\t\tarray.splice(i, 1);\r\n\t\t\t\t\t\t\tif(!array.length)\r\n\t\t\t\t\t\t\t\tdelete buckets[hash];\r\n\t\t\t\t\t\t\t--_._count;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tentry = new HashEntry<TKey, TValue>(key, value);\r\n\t\t\t\t\t\t\tentries.replace(old, entry);\r\n\t\t\t\t\t\t\tarray[i] = entry;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_._onValueUpdate(key, value, old.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn changed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tarray.push(entry = entry || new HashEntry<TKey, TValue>(key, value));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(value===VOID0)\r\n\t\t\t{\r\n\t\t\t\tif(allowOverwrite)\r\n\t\t\t\t\treturn false;\r\n\t\t\t\telse\r\n\t\t\t\t\tthrow new Error(\"Cannot add 'undefined' value.\");\r\n\t\t\t}\r\n\t\t\tbuckets[hash] = [entry = new HashEntry<TKey, TValue>(key, value)];\r\n\t\t}\r\n\t\t++_._count;\r\n\t\tentries.addLast(entry);\r\n\t\t_._onValueUpdate(key, value, undefined);\r\n\t\treturn true;\r\n\t}\r\n\r\n\taddByKeyValue(key:TKey, value:TValue):void\r\n\t{\r\n\t\tthis.setKV(key, value, false);\r\n\t}\r\n\r\n\tgetValue(key:TKey):TValue\r\n\t{\r\n\t\tvar buckets = this._buckets, comparer = this.compareSelector;\r\n\t\tvar compareKey = comparer(key);\r\n\t\tvar hash = computeHashCode(compareKey);\r\n\t\tif(!callHasOwnProperty(buckets, hash)) return undefined;\r\n\r\n\t\tvar array = buckets[hash];\r\n\t\tfor(let entry of array)\r\n\t\t{\r\n\t\t\tif(comparer(entry.key)===compareKey) return entry.value;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tsetValue(key:TKey, value:TValue):boolean\r\n\t{\r\n\t\treturn this.setKV(key, value, true);\r\n\t}\r\n\r\n\tcontainsKey(key:TKey):boolean\r\n\t{\r\n\t\tvar _ = this, buckets = _._buckets, comparer = _.compareSelector;\r\n\t\tvar compareKey = comparer(key);\r\n\t\tvar hash = computeHashCode(compareKey);\r\n\t\tif(!callHasOwnProperty(buckets, hash)) return false;\r\n\r\n\t\tvar array = buckets[hash];\r\n\t\tfor(let i = 0, len = array.length; i<len; i++)\r\n\t\t{\r\n\t\t\tif(comparer(array[i].key)===compareKey) return true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tclear():number\r\n\t{\r\n\t\tvar _ = this, buckets = _._buckets, count = super.clear(); // Remove one by one to allow for signaling.\r\n\r\n\t\t// Ensure reset and clean...\r\n\t\t_._count = 0;\r\n\t\tfor(let key in buckets)\r\n\t\t{\r\n\t\t\tif(buckets.hasOwnProperty(key))\r\n\t\t\t\tdelete buckets[key];\r\n\t\t}\r\n\r\n\t\t_._entries.clear();\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\tprotected getCount():number\r\n\t{\r\n\t\treturn this._count;\r\n\t}\r\n\r\n\tgetEnumerator():IEnumerator<IKeyValuePair<TKey, TValue>>\r\n\t{\r\n\t\tvar _ = this, currentEntry:HashEntry<TKey, TValue>;\r\n\r\n\t\treturn new EnumeratorBase<IKeyValuePair<TKey, TValue>>(\r\n\t\t\t() => { currentEntry = _._entries.first; },\r\n\t\t\t(yielder) =>\r\n\t\t\t{\r\n\t\t\t\tif(currentEntry!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar result = {key: currentEntry.key, value: currentEntry.value};\r\n\t\t\t\t\tcurrentEntry = currentEntry.next;\r\n\t\t\t\t\treturn yielder.yieldReturn(result);\r\n\t\t\t\t}\r\n\t\t\t\treturn yielder.yieldBreak();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprotected getKeys():TKey[]\r\n\t{\r\n\t\tvar _ = this, result:TKey[] = [];\r\n\t\t_._entries.forEach(entry=> result.push(entry.key));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected getValues():TValue[]\r\n\t{\r\n\t\tvar _ = this, result:TValue[] = [];\r\n\t\t_._entries.forEach(entry=> result.push(entry.value));\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\n"]}