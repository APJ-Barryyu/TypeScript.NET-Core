{"version":3,"sources":["System/Time/ClockTime.ts"],"names":["ClockTime","ClockTime.constructor","ClockTime.toString","ClockTime.from","ClockTime.millisecondsFromTime","pluralize"],"mappings":"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","file":"System/Time/ClockTime.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Originally based upon .NET source but with many additions and improvements.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"ITimeMeasurement.d.ts\"/>\r\n///<reference path=\"ITimeQuantity.d.ts\"/>\r\n///<reference path=\"../IEquatable.d.ts\"/>\r\n///<reference path=\"../IComparable.d.ts\"/>\r\n///<reference path=\"../IFormattable.d.ts\"/>\r\n///<reference path=\"../IFormatProvider.d.ts\"/>\r\n///<reference path=\"ITimeStamp.d.ts\"/>\r\n///<reference path=\"HowMany.ts\"/>\r\nimport {areEqual,compare} from '../Compare';\r\nimport TimeQuantity from './TimeQuantity';\r\n\r\n\r\nexport default\r\nclass ClockTime extends TimeQuantity implements IClockTime\r\n{\r\n\r\n\tdays:number;\r\n\thour:number;\r\n\tminute:number;\r\n\tsecond:number;\r\n\tmillisecond:number;\r\n\ttick:number;\r\n\r\n\tconstructor(milliseconds:number);\r\n\tconstructor(hours:number, minutes:number, seconds?:number, milliseconds?:number);\r\n\tconstructor(...args:number[])\r\n\t{\r\n\t\tsuper(\r\n\t\t\targs.length>1\r\n\t\t\t\t? ClockTime.millisecondsFromTime(\r\n\t\t\t\targs[0] || 0,\r\n\t\t\t\targs[1] || 0,\r\n\t\t\t\targs.length>2 && args[2] || 0,\r\n\t\t\t\targs.length>3 && args[3] || 0\r\n\t\t\t)\r\n\t\t\t\t: (args.length>0 && args[0] || 0)\r\n\t\t);\r\n\r\n\t\tvar _ = this;\r\n\t\tvar ms = Math.abs(_.getTotalMilliseconds());\r\n\t\tvar msi = Math.floor(ms);\r\n\r\n\t\t_.tick = (ms - msi)*HowMany.Ticks.Per.Millisecond;\r\n\r\n\t\t_.days = (msi/HowMany.Milliseconds.Per.Day) | 0;\r\n\t\tmsi -= _.days * HowMany.Milliseconds.Per.Day;\r\n\r\n\t\t_.hour = (msi/HowMany.Milliseconds.Per.Hour) | 0;\r\n\t\tmsi -= _.hour * HowMany.Milliseconds.Per.Hour;\r\n\r\n\t\t_.minute = (msi/HowMany.Milliseconds.Per.Minute) | 0;\r\n\t\tmsi -= _.minute * HowMany.Milliseconds.Per.Minute;\r\n\r\n\t\t_.second = (msi/HowMany.Milliseconds.Per.Second) | 0;\r\n\t\tmsi -= _.second * HowMany.Milliseconds.Per.Second;\r\n\r\n\t\t_.millisecond = msi;\r\n\r\n\t\tObject.freeze(_);\r\n\t}\r\n\r\n\r\n\t// Static version for relative consistency.  Constructor does allow this format.\r\n\tstatic from(hours:number, minutes:number, seconds:number = 0, milliseconds:number = 0):ClockTime\r\n\t{\r\n\t\treturn new ClockTime(hours, minutes, seconds, milliseconds);\r\n\t}\r\n\r\n\tstatic millisecondsFromTime(\r\n\t\thours:number,\r\n\t\tminutes:number,\r\n\t\tseconds:number = 0,\r\n\t\tmilliseconds:number = 0):number\r\n\t{\r\n\t\tvar value = hours;\r\n\t\tvalue *= HowMany.Minutes.Per.Hour;\r\n\t\tvalue += minutes;\r\n\t\tvalue *= HowMany.Seconds.Per.Minute;\r\n\t\tvalue += seconds;\r\n\t\tvalue *= HowMany.Milliseconds.Per.Second;\r\n\t\tvalue += milliseconds;\r\n\t\treturn value;\r\n\t}\r\n\r\n\ttoString(/*format?:string, formatProvider?:IFormatProvider*/):string\r\n\t{\r\n\t\t/* INSERT CUSTOM FORMATTING CODE HERE */\r\n\r\n\r\n\t\tvar _ = this, a:string[] = [];\r\n\r\n\t\tif(_.days)\r\n\t\t\ta.push(pluralize(_.days, \"day\"));\r\n\r\n\t\tif(_.hour)\r\n\t\t\ta.push(pluralize(_.hour, \"hour\"));\r\n\r\n\t\tif(_.minute)\r\n\t\t\ta.push(pluralize(_.minute, \"minute\"));\r\n\r\n\t\tif(_.second)\r\n\t\t\ta.push(pluralize(_.second, \"second\"));\r\n\r\n\t\tif(a.length>1)\r\n\t\t\ta.splice(a.length - 1, 0, \"and\");\r\n\r\n\t\treturn a.join(\", \").replace(\", and, \", \" and \");\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Temporary until the full TimeSpanFormat is available.\r\nfunction pluralize(value:number, label:string):string\r\n{\r\n\tif(Math.abs(value)!==1)\r\n\t\tlabel += \"s\";\r\n\r\n\treturn label;\r\n}\r\n"]}