{"version":3,"sources":["System/Time/TimeUnit.ts"],"names":["TimeUnit","TimeUnit.toMilliseconds","TimeUnit.fromMilliseconds","TimeUnit.from","TimeUnit.assertValid"],"mappings":"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","file":"System/Time/TimeUnit.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Originally based upon .NET source but with many additions and improvements.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"ITimeQuantity.d.ts\"/>\r\n///<reference path=\"HowMany.ts\"/>\r\n\r\n\r\nenum TimeUnit\r\n{\r\n\tTicks,\r\n\tMilliseconds,\r\n\tSeconds,\r\n\tMinutes,\r\n\tHours,\r\n\tDays\r\n} // Earth Days\r\n\r\nmodule TimeUnit\r\n{\r\n\r\n\texport function toMilliseconds(\r\n\t\tvalue:number,\r\n\t\tunits:TimeUnit = TimeUnit.Milliseconds):number\r\n\t{\r\n\t\t// noinspection FallThroughInSwitchStatementJS\r\n\t\tswitch(units)\r\n\t\t{\r\n\t\t\tcase TimeUnit.Days:\r\n\t\t\t\tvalue *= HowMany.Hours.Per.Day;\r\n\t\t\tcase TimeUnit.Hours:\r\n\t\t\t\tvalue *= HowMany.Minutes.Per.Hour;\r\n\t\t\tcase TimeUnit.Minutes:\r\n\t\t\t\tvalue *= HowMany.Seconds.Per.Minute;\r\n\t\t\tcase TimeUnit.Seconds:\r\n\t\t\t\tvalue *= HowMany.Milliseconds.Per.Second;\r\n\t\t\tcase TimeUnit.Milliseconds:\r\n\t\t\t\treturn value;\r\n\t\t\tcase TimeUnit.Ticks:\r\n\t\t\t\treturn value/HowMany.Ticks.Per.Millisecond;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Invalid TimeUnit.\");\r\n\t\t}\r\n\t}\r\n\r\n\texport function fromMilliseconds(\r\n\t\tms:number,\r\n\t\tunits:TimeUnit)\r\n\t{\r\n\t\tswitch(units)\r\n\t\t{\r\n\t\t\tcase TimeUnit.Days:\r\n\t\t\t\treturn ms/HowMany.Milliseconds.Per.Day;\r\n\t\t\tcase TimeUnit.Hours:\r\n\t\t\t\treturn ms/HowMany.Milliseconds.Per.Hour;\r\n\t\t\tcase TimeUnit.Minutes:\r\n\t\t\t\treturn ms/HowMany.Milliseconds.Per.Minute;\r\n\t\t\tcase TimeUnit.Seconds:\r\n\t\t\t\treturn ms/HowMany.Milliseconds.Per.Second;\r\n\t\t\tcase TimeUnit.Milliseconds:\r\n\t\t\t\treturn ms;\r\n\t\t\tcase TimeUnit.Ticks:\r\n\t\t\t\treturn ms*HowMany.Ticks.Per.Millisecond;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Invalid TimeUnit.\");\r\n\t\t}\r\n\t}\r\n\r\n\texport function from(quantity:ITimeQuantity, unit:TimeUnit):number {\r\n\t\treturn quantity && fromMilliseconds(quantity.getTotalMilliseconds(),unit);\r\n\t}\r\n\r\n\r\n\texport function assertValid(unit:TimeUnit):boolean\r\n\t{\r\n\t\tif(isNaN(unit) || unit>TimeUnit.Days || unit<TimeUnit.Ticks || Math.floor(unit)!==unit)\r\n\t\t\tthrow new Error(\"Invalid TimeUnit.\");\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n\r\nObject.freeze(TimeUnit);\r\n\r\nexport default TimeUnit;\r\n"]}