{"version":3,"sources":["System/ResolverBase.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAC,cAAc,EAAC,MAAM,6BAA6B,CAAC;AAE3D,OAAO,EAAC,qBAAqB,EAAC,MAAM,oCAAoC,CAAC;AAEzE,oCAAoC;AACpC,MAAM,IAAI,GAAO,IAAI,CAAC;AACtB,MAAM,IAAI,GAAU,cAAc,CAAC;AAEnC;;;;;GAKG;AACH,MAAM,mBAAgC,SAAQ,cAAc;IAM3D,YACW,aAAqB,EACd,eAAuB,EACvB,cAAsB,KAAK;QAE5C,KAAK,EAAE,CAAC;QAJE,kBAAa,GAAb,aAAa,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAQ;QACvB,gBAAW,GAAX,WAAW,CAAgB;QAG5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAG,CAAC,aAAa;YAAE,MAAM,IAAI,qBAAqB,CAAC,cAAc,CAAC,CAAC;QACnE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC9B,CAAC;IAIS,QAAQ;QAEjB,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED,IAAI,KAAK;QAER,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QAGP,MAAM,CAAC,GAAG,IAAI,CAAC;QACf,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpB,IAAG,CAAC,CAAC,eAAe,KAAG,IAAI;YAC1B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAExC,IAAG,CAAC,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,aAAa,EACxC;YACC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,4BAA4B;YACtD,IACA;gBACC,IAAI,CAAS,CAAC;gBACd,IAAG,CAAC,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,EAC9C;oBACC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,4BAA4B;oBACtD,IAAG,CAAC,IAAI,CAAC,WAAW;wBAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAChD,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;oBACd,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;oBACb,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;oBAClB,OAAO,CAAC,CAAC;iBACT;aACD;YACD,OAAM,EAAE,EACR;gBACC,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;gBACd,IAAG,CAAC,CAAC,CAAC,eAAe;oBAAE,MAAM,EAAE,CAAC;aAChC;oBAED;gBACC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC;aACzB;SAED;QAGD,OAAO,CAAC,CAAC,MAAO,CAAC;IAElB,CAAC;IAED,IAAI,QAAQ;QAEX,OAAO,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;IACjD,CAAC;IAES,UAAU;QAEnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,QAAQ;QAEP,MAAM,CAAC,GAAG,IAAI,CAAC;QAEf,IAAG,CAAC,CAAC,CAAC,aAAa;YAClB,OAAO,KAAK,CAAC;aAEd;YACC,CAAC,CAAC,eAAe,GAAG,KAAK,CAAC;YAC1B,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YAChB,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;CAED;AAED,eAAe,YAAY,CAAC","file":"ResolverBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {DisposableBase} from \"./Disposable/DisposableBase\";\r\nimport {Func} from \"./FunctionTypes\";\r\nimport {ArgumentNullException} from \"./Exceptions/ArgumentNullException\";\r\nimport __extendsImport from \"../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst NULL:any = null;\r\nconst NAME:string = \"ResolverBase\";\r\n\r\n/**\r\n * The ResolverBase class handles resolving a factory method and detects recursion.\r\n * Since JS does not have a synchronization mechanism (lock or otherwise)\r\n * we have to prevent getValue from double triggering the value factory (optimistic concurrency)\r\n * or returning return a value that is intermediate between resolving and resolved.\r\n */\r\nexport abstract class ResolverBase<T> extends DisposableBase\r\n{\r\n\r\n\tprotected _isValueCreated:boolean|null; // null = 'creating'\r\n\tprotected _value:T|null|undefined;\r\n\r\n\tprotected constructor(\r\n\t\tprotected _valueFactory:Func<T>,\r\n\t\tprivate readonly _trapExceptions:boolean,\r\n\t\tprivate readonly _allowReset:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._disposableObjectName = NAME;\r\n\t\tif(!_valueFactory) throw new ArgumentNullException(\"valueFactory\");\r\n\t\tthis._isValueCreated = false;\r\n\t}\r\n\r\n\tprotected _error:any;\r\n\r\n\tprotected getError():any\r\n\t{\r\n\t\treturn this._error;\r\n\t}\r\n\r\n\tget error():any\r\n\t{\r\n\t\treturn this.getError();\r\n\t}\r\n\r\n\tgetValue():T\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(_._isValueCreated===null)\r\n\t\t\tthrow new Error(\"Recursion detected.\");\r\n\r\n\t\tif(!_._isValueCreated && _._valueFactory)\r\n\t\t{\r\n\t\t\t_._isValueCreated = null; // Mark this as 'resolving'.\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tlet c:Func<T>;\r\n\t\t\t\tif(!_._isValueCreated && (c = _._valueFactory))\r\n\t\t\t\t{\r\n\t\t\t\t\t_._isValueCreated = null; // Mark this as 'resolving'.\r\n\t\t\t\t\tif(!this._allowReset) this._valueFactory = NULL;\r\n\t\t\t\t\tconst v = c();\r\n\t\t\t\t\t_._value = v;\r\n\t\t\t\t\t_._error = void 0;\r\n\t\t\t\t\treturn v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\t_._error = ex;\r\n\t\t\t\tif(!_._trapExceptions) throw ex;\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t\t_._isValueCreated = true;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\treturn _._value!;\r\n\r\n\t}\r\n\r\n\tget canReset():boolean\r\n\t{\r\n\t\treturn this._allowReset && !!this._valueFactory;\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tthis._valueFactory = NULL;\r\n\t\tthis._value = NULL;\r\n\t\tthis._isValueCreated = NULL;\r\n\t}\r\n\r\n\ttryReset():boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\r\n\t\tif(!_._valueFactory)\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t{\r\n\t\t\t_._isValueCreated = false;\r\n\t\t\t_._value = NULL;\r\n\t\t\t_._error = void 0;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default ResolverBase;"]}