{"version":3,"sources":["System/Collections/ReadOnlyCollectionWrapper.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAC,qBAAqB,EAAC,MAAM,qCAAqC,CAAC;AAC1E,OAAO,EAAC,sBAAsB,EAAC,MAAM,0BAA0B,CAAC;AAGhE,OAAO,EAAC,IAAI,IAAI,cAAc,EAAC,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAC,IAAI,EAAC,MAAM,UAAU,CAAC;AAE9B,oCAAoC;AACpC,MAAM,CAAC,OAAO,gCACb,SAAQ,sBAAyB;IAEjC,YAAY,UAAwC;QAEnD,KAAK,EAAE,CAAC;QAER,IAAG,CAAC,UAAU;YACb,MAAM,IAAI,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAE/C,4DAA4D;QAC5D,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC/B;YACC,IAAI,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,GAAG,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;SACxD;aAED;YACC,IAAI,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;YACzC,IAAI,CAAC,eAAe,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;SACxD;IAEF,CAAC;IAKS,SAAS;QAElB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAES,cAAc;QAEvB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;IAC/B,CAAC;IAES,UAAU;QAEnB,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAQ,IAAI,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAQ,IAAI,CAAC;IAClC,CAAC;CAED","file":"ReadOnlyCollectionWrapper.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {ReadOnlyCollectionBase} from \"./ReadOnlyCollectionBase\";\r\nimport {ICollection} from \"./ICollection\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport {from as enumeratorFrom} from \"./Enumeration/Enumerator\";\r\nimport {Type} from \"../Types\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nexport default class ReadOnlyCollectionWrapper<T>\r\n\textends ReadOnlyCollectionBase<T>\r\n{\r\n\tconstructor(collection:ICollection<T> | ArrayLike<T>)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(!collection)\r\n\t\t\tthrow new ArgumentNullException('collection');\r\n\r\n\t\t// Attempting to avoid contact with the original collection.\r\n\t\tif(Type.isArrayLike(collection))\r\n\t\t{\r\n\t\t\tthis.__getCount = () => collection.length;\r\n\t\t\tthis.__getEnumerator = () => enumeratorFrom(collection);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.__getCount = () => collection.count;\r\n\t\t\tthis.__getEnumerator = () => collection.getEnumerator();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate __getCount:() => number;\r\n\tprivate __getEnumerator:() => IEnumerator<T>;\r\n\r\n\tprotected _getCount():number\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.__getCount();\r\n\t}\r\n\r\n\tprotected _getEnumerator():IEnumerator<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.__getEnumerator();\r\n\t}\r\n\r\n\tprotected _onDispose()\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis.__getCount = <any>null;\r\n\t\tthis.__getEnumerator = <any>null;\r\n\t}\r\n\r\n}\r\n"]}