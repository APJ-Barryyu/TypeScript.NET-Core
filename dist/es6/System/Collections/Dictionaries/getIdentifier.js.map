{"version":3,"sources":["System/Collections/Dictionaries/getIdentifier.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAC,IAAI,EAAC,MAAM,aAAa,CAAC;AAGjC,MAAM,KAAK,GAAa,KAAK,CAAC,CAAC;AAC/B,MAAM,IAAI,GAAG,MAAM,EAAE,UAAU,GAAG,WAAW,EAAE,aAAa,GAAG,aAAa,CAAC;AAK7E,MAAM,wBAAwB,GAAO,EAAE,iBAA4D,KAAK;IAEvG,IAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC;QAAE,OAAO,GAAG,CAAC;IACvC,IAAG,GAAG,KAAG,IAAI;QAAE,OAAO,IAAI,CAAC;IAC3B,IAAG,GAAG,KAAG,KAAK;QAAE,OAAO,IAAI,CAAC,SAAS,CAAC;IAEtC,qBAAqB;IACrB,IAAG,IAAI,CAAC,SAAS,CAAgB,GAAG,EAAE,UAAU,CAAC,EACjD;QACC,OAAO,GAAG,CAAC,SAAS,EAAE,CAAC;KACvB;IAED,iBAAiB;IACjB,IAAG,IAAI,CAAC,SAAS,CAAY,GAAG,EAAE,aAAa,CAAC,EAChD;QACC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;KACzB;IAED,IAAG,cAAc,EAAE;QAClB,IAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;YACjC,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC;;YAE3B,MAAM,+BAA+B,CAAC;KACvC;IAED,OAAO,CAAC,OAAO,GAAG,CAAC,QAAQ,IAAE,IAAI,CAAC,QAAQ,CAAC;QAC1C,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE;QAChB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxC,CAAC;AAED,eAAe,aAAa,CAAC","file":"getIdentifier.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {IHashable, ISymbolizable} from \"./IDictionary\";\r\nimport {Type} from \"../../Types\";\r\nimport {Selector} from \"../../FunctionTypes\";\r\n\r\nconst VOID0:undefined = void 0;\r\nconst NULL = \"null\", GET_SYMBOL = \"getSymbol\", GET_HASH_CODE = \"getHashCode\";\r\nexport function getIdentifier(obj:any,):string|number|symbol\r\nexport function getIdentifier(obj:any, throwIfUnknown:false):string|number|symbol\r\nexport function getIdentifier(obj:any, throwIfUnknown:boolean):string|number|symbol|never\r\nexport function getIdentifier(obj:any, unknownHandler:Selector<any,string|number|symbol>):string|number|symbol\r\nexport function getIdentifier(obj:any, throwIfUnknown:boolean|Selector<any,string|number|symbol> = false):string|number|symbol|never\r\n{\r\n\tif(Type.isPropertyKey(obj)) return obj;\r\n\tif(obj===null) return NULL;\r\n\tif(obj===VOID0) return Type.UNDEFINED;\r\n\r\n\t// See ISymbolizable.\r\n\tif(Type.hasMethod<ISymbolizable>(obj, GET_SYMBOL))\r\n\t{\r\n\t\treturn obj.getSymbol();\r\n\t}\r\n\r\n\t// See IHashable.\r\n\tif(Type.hasMethod<IHashable>(obj, GET_HASH_CODE))\r\n\t{\r\n\t\treturn obj.getHashCode();\r\n\t}\r\n\r\n\tif(throwIfUnknown) {\r\n\t\tif(Type.isFunction(throwIfUnknown))\r\n\t\t\treturn throwIfUnknown(obj);\r\n\t\telse\r\n\t\t\tthrow \"Cannot create known identity.\";\r\n\t}\r\n\r\n\treturn (typeof obj.toString==Type.FUNCTION)\r\n\t\t? obj.toString()\r\n\t\t: Object.prototype.toString.call(obj);\r\n}\r\n\r\nexport default getIdentifier;"]}