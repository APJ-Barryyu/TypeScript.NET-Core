{"version":3,"sources":["System/Collections/ReadOnlyCollectionWrapper.js","System/Collections/ReadOnlyCollectionWrapper.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","Object","defineProperty","value","ArgumentNullException_1","ReadOnlyCollectionBase_1","Enumerator_1","Types_1","extends_1","__extends","ReadOnlyCollectionWrapper","_super","collection","_this","call","this","ArgumentNullException","Type","isArrayLike","__getCount","length","__getEnumerator","from","count","getEnumerator","prototype","_getCount","throwIfDisposed","_getEnumerator","_onDispose","ReadOnlyCollectionBase"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QACfG,UAANF,IAAiBF,OAAOC,QAAUC,OAEf,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,sCAAuC,2BAA4B,2BAA4B,WAAY,iBAAkBN,IAEhK,SAAUI,EAASF,GAClB,YACAM,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCT1D,IAAAC,GAAAP,EAAA,uCACAQ,EAAAR,EAAA,4BAGAS,EAAAT,EAAA,4BACAU,EAAAV,EAAA,YACAW,EAAAX,EAAA,iBAEMY,EAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAGC,QAAAD,GAAYE,GAAZ,GAAAC,GAECF,EAAAG,KAAAC,OAAOA,IAEP,KAAIH,EACH,KAAM,IAAIR,GAAAY,sBAAsB,aDcvB,OCXPT,GAAAU,KAAKC,YAAYN,IAEnBC,EAAKM,WAAa,WAAM,MAAAP,GAAWQ,QACnCP,EAAKQ,gBAAkB,WAAM,MAAAf,GAAAgB,KAAeV,MAI5CC,EAAKM,WAAa,WAAM,MAAAP,GAAWW,OACnCV,EAAKQ,gBAAkB,WAAM,MAAAT,GAAWY,kBDGxBX,ECwBnB,MA7CSJ,GAAAC,EAAAC,GA0BED,EAAAe,UAAAC,UAAV,WAGC,MADAX,MAAKY,kBACEZ,KAAKI,cAGHT,EAAAe,UAAAG,eAAV,WAGC,MADAb,MAAKY,kBACEZ,KAAKM,mBAGHX,EAAAe,UAAAI,WAAV,WAEClB,EAAAc,UAAMI,WAAUf,KAAAC,MAChBA,KAAKI,WAAkB,KACvBJ,KAAKM,gBAAuB,MAG9BX,GA7CSL,EAAAyB,uBDsCLnC,GAAAA,WAAkBe","file":"ReadOnlyCollectionWrapper.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\", \"../Exceptions/ArgumentNullException\", \"./ReadOnlyCollectionBase\", \"./Enumeration/Enumerator\", \"../Types\", \"../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ArgumentNullException_1 = require(\"../Exceptions/ArgumentNullException\");\n    var ReadOnlyCollectionBase_1 = require(\"./ReadOnlyCollectionBase\");\n    var Enumerator_1 = require(\"./Enumeration/Enumerator\");\n    var Types_1 = require(\"../Types\");\n    var extends_1 = require(\"../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var ReadOnlyCollectionWrapper = /** @class */ (function (_super) {\n        __extends(ReadOnlyCollectionWrapper, _super);\n        function ReadOnlyCollectionWrapper(collection) {\n            var _this = _super.call(this) || this;\n            if (!collection)\n                throw new ArgumentNullException_1.ArgumentNullException('collection');\n            // Attempting to avoid contact with the original collection.\n            if (Types_1.Type.isArrayLike(collection)) {\n                _this.__getCount = function () { return collection.length; };\n                _this.__getEnumerator = function () { return Enumerator_1.from(collection); };\n            }\n            else {\n                _this.__getCount = function () { return collection.count; };\n                _this.__getEnumerator = function () { return collection.getEnumerator(); };\n            }\n            return _this;\n        }\n        ReadOnlyCollectionWrapper.prototype._getCount = function () {\n            this.throwIfDisposed();\n            return this.__getCount();\n        };\n        ReadOnlyCollectionWrapper.prototype._getEnumerator = function () {\n            this.throwIfDisposed();\n            return this.__getEnumerator();\n        };\n        ReadOnlyCollectionWrapper.prototype._onDispose = function () {\n            _super.prototype._onDispose.call(this);\n            this.__getCount = null;\n            this.__getEnumerator = null;\n        };\n        return ReadOnlyCollectionWrapper;\n    }(ReadOnlyCollectionBase_1.ReadOnlyCollectionBase));\n    exports.default = ReadOnlyCollectionWrapper;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {ReadOnlyCollectionBase} from \"./ReadOnlyCollectionBase\";\r\nimport {ICollection} from \"./ICollection\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport {from as enumeratorFrom} from \"./Enumeration/Enumerator\";\r\nimport {Type} from \"../Types\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport default class ReadOnlyCollectionWrapper<T>\r\n\textends ReadOnlyCollectionBase<T>\r\n{\r\n\tconstructor(collection:ICollection<T> | ArrayLike<T>)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(!collection)\r\n\t\t\tthrow new ArgumentNullException('collection');\r\n\r\n\t\t// Attempting to avoid contact with the original collection.\r\n\t\tif(Type.isArrayLike(collection))\r\n\t\t{\r\n\t\t\tthis.__getCount = () => collection.length;\r\n\t\t\tthis.__getEnumerator = () => enumeratorFrom(collection);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.__getCount = () => collection.count;\r\n\t\t\tthis.__getEnumerator = () => collection.getEnumerator();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate __getCount:() => number;\r\n\tprivate __getEnumerator:() => IEnumerator<T>;\r\n\r\n\tprotected _getCount():number\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.__getCount();\r\n\t}\r\n\r\n\tprotected _getEnumerator():IEnumerator<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.__getEnumerator();\r\n\t}\r\n\r\n\tprotected _onDispose()\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis.__getCount = <any>null;\r\n\t\tthis.__getEnumerator = <any>null;\r\n\t}\r\n\r\n}\r\n"]}