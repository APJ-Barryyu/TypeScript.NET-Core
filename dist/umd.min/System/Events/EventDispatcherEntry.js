/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../Types","../Disposable/DisposableBase","../Exceptions/ArgumentNullException","../Exceptions/ArgumentException","../Compare","../../extends"],e)}(function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("../Types"),i=e("../Disposable/DisposableBase"),s=e("../Exceptions/ArgumentNullException"),r=e("../Exceptions/ArgumentException"),o=e("../Compare"),p=e("../../extends"),a=p["default"],l="EventDispatcherEntry",u=function(e){function t(t,i,o,p){var a=e.call(this,l,p)||this;if(a.type=t,a.listener=i,a.params=o,!i)throw new s.ArgumentNullException("listener");if(n.Type.isObject(i)&&!n.Type.hasMemberOfType(i,"handleEvent",n.Type.FUNCTION))throw new r.ArgumentException("listener","is invalid type.  Must be a function or an object with 'handleEvent'.");var u=a;return u.type=t,u.listener=i,u.params=o,a}return a(t,e),t.prototype._onDispose=function(){e.prototype._onDispose.call(this),this.listener=null},t.prototype.dispatch=function(e){var t=this;if(t.wasDisposed)return!1;var i=t.listener,s=i&&e.type==t.type;return s&&(n.Type.isFunction(i)?t.listener(e):i.handleEvent(e)),s},t.prototype.matches=function(e,t){var n=this;return n.type==e&&n.listener==t},t.prototype.equals=function(e){var t=this;return t.matches(e.type,e.listener)&&o.areEquivalent(t.params,e.params,!1)},t}(i.DisposableBase);t.EventDispatcherEntry=u,t["default"]=u});
//# sourceMappingURL=EventDispatcherEntry.js.map