{"version":3,"sources":["System/Collections/Enumeration/EnumeratorBase.ts"],"names":[],"mappings":"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","file":"EnumeratorBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {Type} from \"../../Types\";\r\nimport {DisposableBase} from \"../../Disposable/DisposableBase\";\r\nimport {ObjectPool} from \"../../Disposable/ObjectPool\";\r\nimport {IDisposable} from \"../../Disposable/IDisposable\";\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IIteratorResult} from \"./IIterator\";\r\nimport {IYield} from \"./IYield\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport __extendsImport from \"../../../extends\";\r\nimport {Action, Closure} from \"../../FunctionTypes\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nlet yielderPool:ObjectPool<Yielder<any>>;\r\nfunction yielder():Yielder<any>;\r\nfunction yielder(recycle?:Yielder<any>):void;\r\n//noinspection JSUnusedLocalSymbols\r\nfunction yielder(recycle?:Yielder<any>):Yielder<any>|void\r\n{\r\n\tif(!yielderPool)\r\n\t\tyielderPool\r\n\t\t\t= new ObjectPool<Yielder<any>>(40, ()=>new Yielder<any>(), y=>y.yieldBreak());\r\n\tif(!recycle) return yielderPool.take();\r\n\tyielderPool.add(recycle);\r\n}\r\n\r\nclass Yielder<T> implements IYield<T>, IDisposable\r\n{\r\n\tprivate _current:T|undefined = VOID0;\r\n\tprivate _index:number = NaN;\r\n\r\n\tget current():T|undefined { return this._current; } // this class is not entirely local/private.  Still needs protection.\r\n\r\n\tget index():number { return this._index; }\r\n\r\n\tyieldReturn(value:T):boolean\r\n\t{\r\n\t\tthis._current = value;\r\n\t\tif(isNaN(this._index))\r\n\t\t\tthis._index = 0;\r\n\t\telse\r\n\t\t\tthis._index++;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tyieldBreak():boolean\r\n\t{\r\n\t\tthis._current = VOID0;\r\n\t\tthis._index = NaN;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis.yieldBreak();\r\n\t}\r\n}\r\n\r\n// IEnumerator State\r\nconst enum EnumeratorState { Before, Active, Completed, Faulted, Interrupted, Disposed }\r\n\r\nconst NAME = \"EnumeratorBase\";\r\n\r\n// \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n// Naming this class EnumeratorBase to avoid collision with IE.\r\nexport class EnumeratorBase<T> extends DisposableBase implements IEnumerator<T>\r\n{\r\n\r\n\t// @ts-ignore;\r\n\tprivate _yielder:Yielder<T>|undefined;\r\n\t// @ts-ignore;\r\n\tprivate _state:EnumeratorState;\r\n\tprivate _disposer:Closure|undefined;\r\n\r\n\tget current():T|undefined\r\n\t{\r\n\t\tconst y = this._yielder;\r\n\t\treturn y && y.current;\r\n\t}\r\n\r\n\tget index():number\r\n\t{\r\n\t\tconst y = this._yielder;\r\n\t\treturn y ? y.index : NaN;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tinitializer:Closure|null,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tinitializer:Closure|null,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:Closure|null,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tprivate _initializer:Closure|null,\r\n\t\tprivate _tryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:Closure|boolean|null,\r\n\t\tisEndless?:boolean)\r\n\t{\r\n\t\tsuper(NAME);\r\n\t\tthis.reset();\r\n\r\n\t\tif(Type.isBoolean(isEndless))\r\n\t\t\tthis._isEndless = isEndless;\r\n\t\telse if(Type.isBoolean(disposer))\r\n\t\t\tthis._isEndless = disposer;\r\n\r\n\t\tif(Type.isFunction(disposer))\r\n\t\t\tthis._disposer = disposer;\r\n\t}\r\n\r\n\tprotected _isEndless:boolean|undefined;\r\n\t/*\r\n\t * Provides a mechanism to indicate if this enumerable never ends.\r\n\t * If set to true, some operations that expect a finite result may throw.\r\n\t * Explicit false means it has an end.\r\n\t * Implicit void means unknown.\r\n\t */\r\n\tget isEndless():boolean|undefined\r\n\t{\r\n\t\treturn this._isEndless;\r\n\t}\r\n\r\n\t/**\r\n\t * Added for compatibility but only works if the enumerator is active.\r\n\t */\r\n\treset():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tconst y = _._yielder;\r\n\t\t_._yielder = <any>null;\r\n\r\n\t\t_._state = EnumeratorState.Before;\r\n\r\n\t\tif(y) yielder(y); // recycle until actually needed.\r\n\t}\r\n\r\n\tprivate _assertValidState() {\r\n\t\tconst _ = this;\r\n\t\tswitch(_._state)\r\n\t\t{\r\n\t\t\tcase EnumeratorState.Faulted:\r\n\t\t\t\t_.throwIfDisposed(\"This enumerator caused a fault and was disposed.\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase EnumeratorState.Disposed:\r\n\t\t\t\t_.throwIfDisposed(\"This enumerator was manually disposed.\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Passes the current value to the out callback if the enumerator is active.\r\n\t * Note: Will throw ObjectDisposedException if this has faulted or manually disposed.\r\n\t */\r\n\ttryGetCurrent(out:Action<T>):boolean {\r\n\t\tthis._assertValidState();\r\n\t\tif(this._state===EnumeratorState.Active) {\r\n\t\t\tout(<T>this.current);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget canMoveNext():boolean {\r\n\t\treturn this._state < EnumeratorState.Completed;\r\n\t}\r\n\r\n\t/**\r\n\t * Safely moves to the next entry and returns true if there is one.\r\n\t * Note: Will throw ObjectDisposedException if this has faulted or manually disposed.\r\n\t */\r\n\tmoveNext():boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\r\n\t\t_._assertValidState();\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tswitch(_._state)\r\n\t\t\t{\r\n\t\t\t\tcase EnumeratorState.Before:\r\n\t\t\t\t\t_._yielder = _._yielder || yielder();\r\n\t\t\t\t\t_._state = EnumeratorState.Active;\r\n\t\t\t\t\tconst initializer = _._initializer;\r\n\t\t\t\t\tif(initializer)\r\n\t\t\t\t\t\tinitializer();\r\n\t\t\t\t// fall through\r\n\t\t\t\tcase EnumeratorState.Active:\r\n\t\t\t\t\tif(_._tryGetNext(_._yielder!))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.dispose();\r\n\t\t\t\t\t\t_._state = EnumeratorState.Completed;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tthis.dispose();\r\n\t\t\t_._state = EnumeratorState.Faulted;\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves to the next entry and emits the value through the out callback.\r\n\t * Note: Will throw ObjectDisposedException if this has faulted or manually disposed.\r\n\t */\r\n\ttryMoveNext(out:Action<T>):boolean {\r\n\t\tif(this.moveNext()) {\r\n\t\t\tout(<T>this.current);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnextValue():T|undefined\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? this.current\r\n\t\t\t: VOID0;\r\n\t}\r\n\r\n\t/**\r\n\t * Exposed for compatibility with generators.\r\n\t */\r\n\tnext():IIteratorResult<T>\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? new IteratorResult(this.current, this.index)\r\n\t\t\t: IteratorResult.Done\r\n\t}\r\n\r\n\tend():void {\r\n\t\tthis._ensureDisposeState(EnumeratorState.Interrupted);\r\n\t}\r\n\r\n\t'return'():IIteratorResult<void>\r\n\t'return'<TReturn>(value:TReturn):IIteratorResult<TReturn>\r\n\t'return'(value?:any):IIteratorResult<any>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_._assertValidState();\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\treturn value===VOID0 || _._state===EnumeratorState.Completed || _._state===EnumeratorState.Interrupted\r\n\t\t\t\t? IteratorResult.Done\r\n\t\t\t\t: new IteratorResult(value, VOID0, true);\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\t_.end();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _ensureDisposeState(state:EnumeratorState):void {\r\n\t\tconst _ = this;\r\n\t\tif(!_.wasDisposed) {\r\n\t\t\t_.dispose();\r\n\t\t\t_._state = state;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_._isEndless = false;\r\n\t\tconst disposer = _._disposer;\r\n\r\n\t\t_._initializer = null;\r\n\t\t_._disposer = undefined;\r\n\r\n\r\n\t\tconst y = _._yielder;\r\n\t\t_._yielder = undefined;\r\n\t\tthis._state = EnumeratorState.Disposed;\r\n\r\n\t\tif(y) yielder(y);\r\n\r\n\t\tif(disposer)\r\n\t\t\tdisposer();\r\n\t}\r\n\r\n}\r\n\r\nexport default EnumeratorBase;\r\n"]}