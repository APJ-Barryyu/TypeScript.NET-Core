/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT
 */
define(["require","exports","./Integer","./Collections/Array/initialize","./Collections/Array/shuffle"],function(n,e,t,r,u){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o,i=t.Integer.assert;!function(n){function e(n){return void 0===n&&(n=1),Math.floor(Math.random()*n)}function o(n,t){var r=Math.abs(n);return 0===r||1===r&&!t?0:(t&&(n+=n/r),e(n))}function f(n){for(var e=n.length,t=r.initialize(e),u=0;u<e;u++)t[u]=n[u];return t}function a(n){return s(n)}function c(n){return void 0===n&&(n=1),function(){return e(n)}}function s(n,e){return i(n,"boundary"),o(n,e)}function l(n,e,t){i(n);var r=[];r.length=n;for(var u=0;u<n;u++)r[u]=o(e,t);return r}function h(n){return u.shuffle(n)}function g(n){return u.shuffle(f(n))}function d(n,e){switch(e!==1/0&&t.Integer.assertZeroOrGreater(e),e){case 0:return[];case 1:return[d.one(n,!0)];default:var r=u.shuffle(f(n));return e<r.length&&(r.length=e),r}}n.integer=a,n.generate=c,function(n){function e(n,e){return function(){return o(n,e)}}n.integers=e}(c=n.generate||(n.generate={})),n.next=s,function(t){function r(e,t){return n.next(e,t)}function u(n){if(void 0===n&&(n=Number.MAX_VALUE),isNaN(n))throw"'boundary' is not a number.";return Math.random()*n}function o(n,t,r){i(n,"min"),i(t,"max");var u=t-n;return 0===u?n:(r&&(u+=u/Math.abs(u)),n+e(u))}t.integer=r,t["float"]=u,t.inRange=o}(s=n.next||(n.next={})),n.integers=l,n.shuffle=h,n.copy=g,n.select=d,function(n){function t(n,t){if(n&&n.length)return n[e(n.length)];if(t)throw"Cannot select from an empty set."}n.one=t}(d=n.select||(n.select={}))}(o=e.Random||(e.Random={}))});
//# sourceMappingURL=Random.js.map