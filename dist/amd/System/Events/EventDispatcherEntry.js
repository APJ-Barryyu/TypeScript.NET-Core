/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports","../Types","../Disposable/DisposableBase","../Exceptions/ArgumentNullException","../Exceptions/ArgumentException","../Compare","../../extends"],function(e,t,n,r,i,s,p,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=a["default"],l="EventDispatcherEntry",u=function(e){function t(t,r,p,a){var o=e.call(this,l,a)||this;if(o.type=t,o.listener=r,o.params=p,!r)throw new i.ArgumentNullException("listener");if(n.Type.isObject(r)&&!n.Type.hasMemberOfType(r,"handleEvent",n.Type.FUNCTION))throw new s.ArgumentException("listener","is invalid type.  Must be a function or an object with 'handleEvent'.");var u=o;return u.type=t,u.listener=r,u.params=p,o}return o(t,e),t.prototype._onDispose=function(){e.prototype._onDispose.call(this),this.listener=null},t.prototype.dispatch=function(e){var t=this;if(t.wasDisposed)return!1;var r=t.listener,i=r&&e.type==t.type;return i&&(n.Type.isFunction(r)?t.listener(e):r.handleEvent(e)),i},t.prototype.matches=function(e,t){var n=this;return n.type==e&&n.listener==t},t.prototype.equals=function(e){var t=this;return t.matches(e.type,e.listener)&&p.areEquivalent(t.params,e.params,!1)},t}(r.DisposableBase);t.EventDispatcherEntry=u,t["default"]=u});
//# sourceMappingURL=EventDispatcherEntry.js.map